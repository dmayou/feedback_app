{"version":3,"sources":["components/Header/Header.jsx","components/Progress/Progress.jsx","components/RadioRating/RadioRating.jsx","components/RatingCard/RatingCard.jsx","components/CommentCard/CommentCard.jsx","components/SweetAlert/SweetAlert.js","components/SummarySubmit/SummarySubmit.jsx","components/AdminView/AdminView.jsx","components/App/App.js","reducers/ratingReducer.js","reducers/currentPageReducer.js","reducers/feedbackSubmissionReducer.js","reducers/feedbackListReducer.js","registerServiceWorker.js","index.js"],"names":["Header","header","this","props","location","pathname","react_default","a","createElement","className","Component","Progress","step","ProgressBar_default","style","width","margin","now","styles","root","color","green","&$checked","checked","RadioRating","state","selectedValue","handleChange","event","_this","setState","target","value","dispatch","type","payload","display","Radio_default","onChange","name","aria-label","connect","withStyles","RatingCard","handleClick","input","store","ratingInput","key","text","dataKey","history","push","nextPage","classes","Card_default","card","CardContent_default","Typography_default","title","gutterBottom","question","lowRange","components_RadioRating_RadioRating","highRange","CardActions_default","Button_default","onClick","variant","marginBottom","fontSize","size","minWidth","bullet","pos","comment","feedbackSubmission","comments","SwAlert","lib_default","show","onConfirm","hideSaveConf","SummarySubmit","showSaveConf","console","log","axios","post","then","response","catch","err","data","feeling","understanding","support","undefined","allInputsEntered","index_es","marginTop","disabled","SweetAlert","AdminView","handleCheckChange","id","flagged","newFlag","Axios","put","concat","getFeedback","handleDeleteClick","delete","_this2","get","_this3","rows","feedbackList","map","fb","icons_index_es","App","formText","p1","p2","p3","HashRouter","Route","exact","path","render","Redirect","to","component","components_Progress_Progress","Object","assign","currentPage","components_RatingCard_RatingCard","CommentCard","arguments","length","action","objectSpread","defineProperty","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","storeInstance","createStore","combineReducers","applyMiddleware","logger","ReactDOM","es","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.09c28ee0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        let header;\n        if (this.props.location.pathname === '/admin') { // header for /admin view\n            header = <h1 className=\"App-title\">Feedback Results</h1>            \n        } else { // header for /form view\n            header = <div\n            ><h1 className=\"App-title\">Feedback!</h1>\n                <h4><i>Don't forget it!</i></h4>\n            </div>;\n        }\n        return(\n            <header className=\"App-header\">\n                {header}\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport ProgressBar from 'react-bootstrap/lib/ProgressBar';\nimport './Progress.css';\n\nclass Progress extends Component {\n    render() {\n        const maxPages = 4; // app has 4 revolving pages\n        const {step} = this.props;\n        return (\n            <div className=\"progressHdr\">\n                <h3>Page {step} of {maxPages}</h3>\n                <ProgressBar\n                    style={ { width: '80%', margin: 'auto' }}\n                    now={step * 100 / maxPages}\n                    />\n                <p> </p>\n            </div>\n        );\n    }\n}\n\nexport default Progress;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport Radio from '@material-ui/core/Radio';\n\nconst styles = {\n    root: {\n        color: green[600],\n        '&$checked': {\n            color: green[500],\n        },\n    },\n    checked: {},\n};\n\nclass RadioRating extends Component {\n    state = {\n        selectedValue: '',\n    };\n    handleChange = event => {\n        this.setState({ selectedValue: event.target.value });\n        this.props.dispatch({ type: 'RATING_CHANGE', payload: event.target.value });\n    };\n    render() {\n        return (\n            <div style={ { display: 'inline' } }>\n                <Radio\n                    checked={this.state.selectedValue === '1'}\n                    onChange={this.handleChange}\n                    value=\"1\"\n                    name=\"radio-button\"\n                    aria-label=\"1\"\n                    color=\"default\"\n                />\n                <Radio\n                    checked={this.state.selectedValue === '2'}\n                    onChange={this.handleChange}\n                    value=\"2\"\n                    name=\"radio-button\"\n                    aria-label=\"2\"\n                    color=\"default\"\n                />\n                <Radio\n                    checked={this.state.selectedValue === '3'}\n                    onChange={this.handleChange}\n                    value=\"3\"\n                    name=\"radio-button\"\n                    aria-label=\"3\"\n                    color=\"default\"\n                />\n                <Radio\n                    checked={this.state.selectedValue === '4'}\n                    onChange={this.handleChange}\n                    value=\"4\"\n                    color=\"default\"\n                    name=\"radio-button\"\n                    aria-label=\"4\"\n                />\n                <Radio\n                    checked={this.state.selectedValue === '5'}\n                    onChange={this.handleChange}\n                    value=\"5\"\n                    color=\"default\"\n                    name=\"radio-button\"\n                    aria-label=\"5\"\n                />\n            </div>\n        );\n    }\n}\n\nRadioRating.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect()(withStyles(styles)(RadioRating));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport RadioRating from '../RadioRating/RadioRating';\n\nimport './RatingCard.css';\n\nconst styles = {\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n    },\n    title: {\n        fontSize: 26,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n};\n\nclass RatingCard extends Component {\n    handleClick = () => {\n        const input = this.props.store.ratingInput;\n        if (input > 0) {\n            this.props.dispatch({ \n                type: 'NEW_INPUT', \n                payload: {\n                    key: this.props.text.dataKey, \n                    value: input\n                }\n            });\n        }\n        this.props.dispatch({ type: 'NEXT_PAGE' });\n        this.props.history.push(this.props.text.nextPage);\n    }\n    componentDidMount() {\n        this.props.dispatch({ type: 'RATING_RESET' });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {this.props.text.question}\n                </Typography>\n                <div>\n                    <p className=\"pInline\">{this.props.text.lowRange}</p>\n                    <RadioRating />\n                    <p className=\"pInline\">{this.props.text.highRange}</p>\n                </div>\n            </CardContent>\n            <CardActions>\n                <Button\n                    onClick={this.handleClick}\n                    variant=\"outlined\"\n                    style={ {\n                        margin: 'auto',\n                        marginBottom: '40px',\n                        fontSize: 16,\n                        color: 'dimgray'\n                        } }\n                    size=\"large\"\n                    >Next\n                </Button>\n            </CardActions>\n        </Card>\n    );}\n}\n\nRatingCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStoreToProps = (store) => {\n    return {store};\n}\n\nexport default connect(mapStoreToProps)(withStyles(styles)(RatingCard));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport './CommentCard.css';\n\nconst styles = {\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n    },\n    title: {\n        fontSize: 26,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n};\nclass RatingCard extends Component {\n    state = {\n        comment: ''\n    }\n    handleChange = event => {\n        this.setState({ comment: event.target.value });\n    };\n    handleClick = () => {\n        // Save comment in reducer\n        this.props.dispatch({\n            type: 'NEW_INPUT',\n            payload: {\n                key: 'comments',\n                value: this.state.comment\n            }\n        });\n        // Clear client input\n        this.setState({ comment: '' });\n        // Update reducer used for progress bar\n        this.props.dispatch({ type: 'NEXT_PAGE' });\n        // Route back to first page\n        this.props.history.push('/');\n    }\n    componentDidMount() {\n        // display current comment in textarea\n        this.setState({ comment: this.props.store.feedbackSubmission.comments });\n    }\n    render() {\n        return (\n            <Card className={this.props.card}>\n                <CardContent>\n                    <Typography \n                        className={this.props.classes.title} \n                        color=\"textSecondary\" \n                        gutterBottom>\n                        Any Comments you want to leave?\n                    </Typography>\n                    <div>\n                        <textarea \n                            onChange={this.handleChange}\n                            value={this.state.comment} \n                            className=\"commentInput\" \n                            type=\"text\">\n                        </textarea>  \n                    </div>\n                </CardContent>\n                <CardActions>\n                    <Button\n                        variant=\"outlined\"\n                        onClick={this.handleClick}\n                        style={{\n                            margin: 'auto',\n                            marginBottom: '40px',\n                            fontSize: 16,\n                            color: 'dimgray'\n                        }}\n                        size=\"large\"\n                    >Next\n                    </Button>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nRatingCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapPropsToState = (store) => {\n    return {store};\n}\n\nexport default connect(mapPropsToState)(withStyles(styles)(RatingCard));","import React, { Component } from 'react';\nimport SweetAlert from 'sweetalert-react';\n\nclass SwAlert extends Component {\n    render() {\n        return (\n            <div>\n                <SweetAlert\n                    show={this.props.show}\n                    title=\"Feedback Saved\"\n                    text=\"Thank you for your feedback!\"\n                    onConfirm={this.props.hideSaveConf}\n                />\n            </div>\n        );\n    }\n}\n\nexport default SwAlert;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport './SummarySubmit.css';\nimport SwAlert from '../SweetAlert/SweetAlert';\nimport axios from 'axios';\n\nclass SummarySubmit extends Component {\n    state = {\n        showSaveConf: false // visible state of sweetalert\n    }\n    allInputsEntered() {\n        const data = this.props.state.feedbackSubmission;\n        return (data.feeling > 0\n            && data.understanding > 0\n            && data.support > 0\n            && data.comments !== '' \n            && data.comments !== undefined\n        );\n    }\n    handleClick = () => {\n        console.log('clicked');\n        axios.post('/fb', this.props.state.feedbackSubmission)\n            .then( (response) => {\n                console.log('POST success');\n                this.setState({ showSaveConf: true});\n                this.props.dispatch({type: 'RESET_INPUT'});\n            }).catch( (err) => {\n                console.log('POST error:', err);\n            }\n        );\n    }\n    hideSaveConf = () => {\n        this.setState({ showSaveConf: false });\n    }\n    render() {\n        const data = this.props.state.feedbackSubmission;\n        return(\n            <div>\n                {this.allInputsEntered() && <h5 className=\"Notification\"\n                    >You've answered all the questions! Click Submit to save.\n                </h5>}\n                <Button\n                    variant='contained'\n                    onClick={this.handleClick}\n                    color='primary'\n                    style={{\n                        margin: 'auto',\n                        marginBottom: '20px',\n                        marginTop: '40px',\n                        fontSize: 16,\n                    }}\n                    size=\"large\"\n                    disabled={!this.allInputsEntered()}\n                >Submit\n                </Button>\n                <h3>Your Feedback is:</h3>\n                <p>Feelings: {data.feeling}</p>\n                <p>Understanding: {data.understanding}</p>\n                <p>Support: {data.support}</p>\n                <p>Comments: {data.comments}</p>\n                <SwAlert \n                    show={this.state.showSaveConf}\n                    hideSaveConf={this.hideSaveConf}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStoreToProps = (state) => {\n    return {state};\n}\n\nexport default connect(mapStoreToProps)(SummarySubmit);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Flag, Delete } from '@material-ui/icons';\nimport Axios from 'axios';\n\nclass AdminView extends Component {\n    componentDidMount() {\n        this.getFeedback();\n    }\n    getFeedback() {\n        Axios.get('/fb')\n            .then((response) => {\n                console.log('GET success');\n                this.props.dispatch({ type: 'STORE_FB_LIST', payload: response.data });\n            }).catch((err) => {\n                console.log('GET error:', err);\n            }\n        );\n    }\n    handleCheckChange = (id, flagged) => {\n        const newFlag = (flagged === false) ? 'TRUE' : 'FALSE';\n        Axios.put(`/fb/flag/${id}`, {flagged: newFlag})\n            .then((response) => {\n                console.log('PUT success');\n                this.getFeedback();\n            }).catch((err) => {\n                console.log('PUT error:', err);\n            }\n        );\n    }\n    handleDeleteClick = (id) => {\n        Axios.delete(`/fb/${id}`)\n            .then((response) => {\n                console.log('DELETE success');\n                this.getFeedback();\n            }).catch((err) => {\n                console.log('DELETE error:', err);\n            }\n        );\n    }\n    render() {\n        const rows = this.props.store.feedbackList.map( (fb) => {\n            return (\n                <tr key={fb.id}>\n                    <td><input \n                            type=\"checkbox\"\n                            checked={fb.flagged}\n                            onChange={()=>this.handleCheckChange(fb.id, fb.flagged)} \n                        />\n                    </td>\n                    <td>{fb.feeling}</td>\n                    <td>{fb.understanding}</td>\n                    <td>{fb.support}</td>\n                    <td>{fb.comments}</td>\n                    <td><Delete onClick={()=>this.handleDeleteClick(fb.id)}/></td>\n                </tr>\n            );\n        });\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr><td><Flag /></td><td>Feelings</td><td>Understanding</td><td>Support</td><td>Comments</td><td>Delete</td></tr>\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapStoreToProps = (store) => {\n    return {store};\n}\n\nexport default connect(mapStoreToProps)(AdminView);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Header from '../Header/Header';\nimport Progress from '../Progress/Progress';\nimport RatingCard from '../RatingCard/RatingCard';\nimport CommentCard from '../CommentCard/CommentCard';\nimport SummarySubmit from '../SummarySubmit/SummarySubmit';\nimport AdminView from '../AdminView/AdminView';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const formText = {\n      p1: {\n        question: 'How are you feeling today?',\n        lowRange: 'I\\'m very stressed.',\n        highRange: 'I\\'m feeling great!',\n        nextPage: '/form/p2',\n        dataKey: 'feeling'\n      },\n      p2: {\n        question: 'How well do you understand today\\'s material?',\n        lowRange: 'I\\'m totally lost.',\n        highRange: 'I\\'ve got this!',\n        nextPage: '/form/p3',\n        dataKey: 'understanding'\n      },\n      p3: {\n        question: 'Did you feel supported by Prime staff today?',\n        lowRange: 'I feel abandoned.',\n        highRange: 'I feel supported!',\n        nextPage: '/form/comment',\n        dataKey: 'support'\n      }\n    }\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path=\"/\" render={() => <Redirect to=\"/form\" />} />\n          <Route path=\"/\" component={Header} />\n          <br/>\n          <Route path=\"/form\" render={(props)=><Progress {...props} step={this.props.store.currentPage}/>} />\n          <Route path=\"/form\" exact render={(props)=><RatingCard {...props} text={formText.p1}/>} />\n          <Route path=\"/form/p2\" render={(props)=><RatingCard {...props} text={formText.p2}/>} />\n          <Route path=\"/form/p3\" render={(props) => <RatingCard {...props} text={formText.p3} />} />\n          <Route path=\"/form/comment\" component={CommentCard} />\n          <Route path=\"/admin\" component={AdminView} />\n          <Route path=\"/form\" component={SummarySubmit} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {store}\n};\n\nexport default connect(mapStateToProps)(App);","// Holds value of radio button input before\nconst ratingInput = (state=0, action) => {\n    switch (action.type) {\n        case 'RATING_CHANGE':\n            return action.payload;\n        case 'RATING_RESET':\n            return 0;\n        default:\n            return state;\n    }\n}\n\nexport default ratingInput;","// Holds global value of current page used to display progress bar\nconst currentPage = (state = 1, action) => {\n    const MAX_PAGES = 4; // app has 4 revolving pages\n    switch (action.type) {\n        case 'NEXT_PAGE':\n            return state < MAX_PAGES ? state + 1 : 1;\n        default:\n            return state;\n    }\n}\n\nexport default currentPage;","// Holds form data before database POST\nconst feedbackSubmission = (state = {}, action) => {\n    switch (action.type) {\n        case 'NEW_INPUT':\n            console.log('payload:', action.payload);\n            return ({...state, [action.payload.key]: action.payload.value});\n        case 'RESET_INPUT':\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport default feedbackSubmission;","// Holds list of feedback retrieved from database\nconst feedbackList = (state = [], action) => {\n    switch (action.type) {\n        case 'STORE_FB_LIST':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default feedbackList;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport './index.css';\nimport App from './components/App/App';\nimport ratingInput from './reducers/ratingReducer';\nimport currentPage from './reducers/currentPageReducer';\nimport feedbackSubmission from './reducers/feedbackSubmissionReducer';\nimport feedbackList from './reducers/feedbackListReducer';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst storeInstance = createStore(\n    combineReducers({\n        ratingInput,\n        currentPage,\n        feedbackSubmission,\n        feedbackList\n    }),\n    applyMiddleware(logger)\n);\n\nReactDOM.render(<Provider store={storeInstance}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}